/* ============================================ */
/* ======== CONTENT: COMPONENTS & ELEMENTS ==== */
/* ====== Depends on: tokens, site, typography ====== */
/* ============================================ */

/* ====== GENERAL CONTENT LAYOUT ======================= */

.content-section + .content-section {
  margin-block-start: var(--section-gap);
}

.content-section :where(h1,h2,h3,h4) {
  margin: 0 0 calc(var(--flow-gap) * .5) 0;
}

.content-section {
  display: grid;
  flex-wrap: wrap; 
  gap: var(--section-gap);
  align-items: stretch; 
  max-inline-size: 100%;
  grid-template-columns: 1fr;
}

.content-section.cols-2 { grid-template-columns: repeat(2, 1fr); }
.content-section.cols-3 { grid-template-columns: repeat(3, 1fr); }

@media (max-width: 800px) { .content-section.cols-2 { grid-template-columns: 1fr; }}
@media (max-width: 1100px) { .content-section.cols-3  { grid-template-columns: repeat(2, 1fr); }}

/* ====== CONTENT CARD ====== */
.card{
  display: grid;
  position: relative;
  min-block-size: 100%;
  block-size: 100%;

  grid-template-areas:
    "card-head"
    "card-body"
    "card-foot";
  grid-template-rows: auto 1fr auto;

  border-radius: var(--radius-l);
  padding: var(--card-padding);
  gap: var(--card-gap);
  background: var(--card-surface--dark);
  box-shadow: var(--surface-shadow--default),var(--control-shadow--inset);
  backdrop-filter: var(--blur-m);
}
.card--ghost    { background: unset;}
.card--plain    { background: transparent; box-shadow: none; backdrop-filter: none; filter: drop-shadow(6px 6px 3px var(--color-shadow--strong));}
.card--light   { background: var(--card-surface--light); }
.card--flush   { padding: 0; box-shadow: none; backdrop-filter: none; }
.card--plain :where(.prose){font-weight: var(--thick-font-weight);}
.is-centered { justify-items: center; text-align: center; }
.is-centered :where(.prose) { margin-inline: auto; }

.is-condensed { gap: var(--flow-gap); }
.is-italic { font-style: italic; }
.is-animated { transition: var(--transition-soft); }
.is-animated:hover,
.is-animated:focus-visible {
  transform: scale(1.04);
  box-shadow: var(--surface-glow--soft);
}

.card__head { 
  grid-area: card-head; 
  display: grid;
  grid-template-areas: "title badges";
  grid-template-columns: minmax(0,1fr) auto;
  align-items: flex-start;             /* vertikal mittig */
  column-gap: var(--card-gap);
}
.card__head--column {
  grid-template-areas:
    "title"
    "badges";
  grid-template-columns: 1fr;
  row-gap: var(--flow-gap); 
}
:not(.card__head--column) > .card__badges {margin-block-start: .25em;}
.card__body { grid-area: card-body; display: contents; }
.card__foot { grid-area: card-foot; display: contents; }

.card__title { grid-area: title; min-width: 0;  }  /* min-width 0 gegen Overflow */
.card__head > .card__badges{ grid-area: badges; }
.card__spacer { flex: 1 1 auto; }

.title-with-icon {
  display: inline-flex;
  align-items: center;
  gap: 0.5em;
}

.title-with-icon__icon svg {
  inline-size: 1.4em;
  block-size: 1.4em;
}

.title-with-icon__emoji {
  font-size: 1.1em;
  line-height: 1;
}

.title-with-icon__text {
  display: inline-block;
}

/* ====== PROSE CONTENT ====== */
.prose {
  display: flex;
  flex-direction: column;
  gap: var(--flow-gap);
  margin-block: var(--flow-gap);
  max-inline-size: clamp(45ch, 9vw, 65ch);
}

.prose:first-child { margin-block-start: 0; }
.prose > * { margin: 0; }

.prose ul,
.prose ol {
  padding-inline-start: 1.2em;
  margin: 0;
}

/* ====== HERO ====== */

.card__hero-banner {
  position: relative;
  border-radius: var(--radius-xl);
  overflow: hidden;
  background: var(--card-surface--dark);
  box-shadow: var(--surface-shadow--default);
    block-size: clamp(14rem, 38vh, 24rem);
}

.card__hero-overlay {
  position: absolute;
  inset-block-end: clamp(var(--card-padding), 4vw, 4rem);
  inset-inline: clamp(var(--card-padding), 4vw, 5rem);
  display: flex;
  flex-direction: column;
  gap: calc(var(--flow-gap) * 2);
  padding: var(--card-padding);
  border-radius: var(--radius-l);
  background: color-mix(in oklab, var(--card-surface--dark) 78%, transparent);
  backdrop-filter: var(--blur-l);
  color: var(--text-color);
  box-shadow: var(--surface-shadow--strong);
  max-inline-size: min(48rem, 70%);
}

.card__hero-overlay :where(h1,h2,h3) {
  margin: 0;
  font-size: clamp(2.25rem, 2.5rem + 1vw, 3.25rem);
  line-height: var(--line-height-l);
  text-wrap: balance;
}

.card__hero-overlay :where(p) {
  margin: 0;
  font-size: var(--font-size-m);
  line-height: var(--line-height-m);
  opacity: 0.9;
}

.card__body > ol {
  list-style: none;
  padding: 0;
  margin: 0;
  display: flex;
  flex-direction: column;
  gap: var(--card-gap);
}

.card__body > ol > li { margin: 0; }

.card__body > ol > li > a {
  display: grid;
  grid-template-columns: auto 1fr;
  gap: var(--card-gap);
  align-items: flex-start;
  padding: calc(var(--card-gap) * 0.75) var(--card-gap);
  border-radius: var(--radius-m);
  background: color-mix(in oklab, var(--card-surface--light) 70%, transparent);
  box-shadow: var(--surface-shadow--soft);
  text-decoration: none;
  color: inherit;
  transition: var(--transition-soft);
}

.card__body > ol > li > a:hover,
.card__body > ol > li > a:focus-visible {
  transform: var(--transform-scale);
  box-shadow: var(--surface-glow--soft);
}

.card__body > ol > li > a > span:first-child {
  font-weight: var(--bold-font-weight);
  font-size: var(--font-size-m);
  line-height: var(--line-height-m);
  color: var(--text-highlight);
}

.card__body > ol > li > a > div {
  display: flex;
  flex-direction: column;
  gap: calc(var(--flow-gap) * 2);
}

.card__body > ol > li > a > div > strong {
  font-weight: var(--bold-font-weight);
  font-size: var(--font-size-m);
  line-height: var(--line-height-m);
}

.card__body > ol > li > a > div > span {
  font-size: var(--font-size-s);
  line-height: var(--line-height-m);
  opacity: 0.85;
}

@media (max-width: 720px) {
  .card__hero-overlay {
    inset-inline: clamp(var(--card-padding), 4vw, 6vw);
  }

  .card__hero-overlay :where(h1,h2,h3) {
    font-size: clamp(1.75rem, 1.4rem + 4vw, 2.5rem);
  }
}

