---
import { ASSETS } from '@Assets/ui';

type NavLink = {
  href: string;
  label: string;
  emoji?: string;
  includeInHeader?: boolean;
};
type Breadcrumb = {
  label: string;
  href: string;
  isCurrent: boolean;
};
type Props = {
  navLinks: NavLink[];
  meta?: { title?: string; description?: string; url?: string };
  breadcrumbs: Breadcrumb[];
};

const { navLinks = [],breadcrumbs=[] } = (Astro.props ?? {}) as Props;
---


<header class="header" aria-label="Primary navigation">
  <a class="header__logo" aria-label="Home" href="/">
    <img src={ASSETS.logo_header.src} alt="foxx.pet" />
  </a>
  <nav class="header__nav">
    {navLinks
      .filter((link) => link.includeInHeader)
      .map((link) => (
        <a class="header__nav-link" href={link.href}>
          <span class="header__nav-text">{link.label}</span>
          {link.emoji && <span class="header__nav-emoji">{link.emoji}</span>}
        </a>
      ))}
  </nav>
  <div class="header__crumbs" aria-label="Breadcrumb">
    <ol>
      {breadcrumbs.map((crumb, index) => (
        <li>
          {crumb.isCurrent ? (
            <span class="is-current" aria-current="page">{crumb.label}</span>
          ) : (
            <a href={crumb.href}>{crumb.label}</a>
          )}
        </li>
      ))}
    </ol>
  </div>
</header>

<script>
  import { ResponsiveSiteHeader , observer} from '@Scripts/siteHeaderSticky.js';
  import { runOnReady } from '@Scripts/utils/_runOnReady.js';
  runOnReady(observer);

</script>


