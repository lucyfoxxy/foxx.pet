---
import { ASSETS } from '@Assets/ui';

type NavLink = {
  href: string;
  label: string;
  emoji?: string;
  includeInHeader?: boolean;
};

type Props = {
  navLinks: NavLink[];
  meta?: { title?: string; description?: string; url?: string };
};

const { navLinks = [] } = (Astro.props ?? {}) as Props;
---

<header id="site-header" class="site-header">
  <a class="site-header__logo" aria-label="Home" href="/">
    <img src={ASSETS.logo_header.src} alt="foxx.pet" />
  </a>

 
</header>
  <nav class="site-nav">
    {navLinks
      .filter((link) => link.includeInHeader)
      .map((link) => (
        
          <a class="site-nav__link" href={link.href}>
            <span class="site-nav__text">{link.label}</span>
            {link.emoji && (
              <span class="site-nav__emoji">{link.emoji}</span>
            )}
          </a>
        
      ))
    }
  </nav>
<script>
  import initResponsiveSiteHeader from '@Scripts/siteHeaderSticky.js';
  import { runOnReady } from '@Scripts/utils/_runOnReady.js';

  runOnReady(() => {
    const cleanup = initResponsiveSiteHeader();

    if (typeof cleanup === 'function') {
      const teardown = () => {
        cleanup();
        document.removeEventListener('astro:before-preparation', teardown);
      };

      document.addEventListener('astro:before-preparation', teardown);
    }
  });
</script>


