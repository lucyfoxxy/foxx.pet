---
import BaseLayout from '@Templates/BaseLayout.astro';
import type { PageContent } from '@Content/siteContent';
import { getNavLabelParts, type PageContent } from '@Content/siteContent';
import Card from '@Templates/Card.astro';
import TitleWithIcon from '@Templates/partials/TitleWithIcon.astro';

interface CategoryEntry {
  slug: string;
  title: string;
  description?: string;
  href?: string;
}

interface Props {
  content: PageContent;
  categories: CategoryEntry[];
  backHref?: string;
  backLabel?: string;
  meta?: Partial<{ title: string; description: string; url: string }>;
}
const { content, categories, baseHref, backHref, backLabel, meta: metaOverride } = Astro.props as Props;
const meta = {
  title: content.title,
  description: content.description,
  ...(metaOverride ?? {}),
};

const { content, categories, baseHref } = Astro.props as Props;
const introParagraphs = content.introParagraphs ?? [content.description];
const { icon, emoji } = getNavLabelParts(content);
const normalizedBaseHref = baseHref ? baseHref.replace(/\/+$/, '') : '';
const getHref = (slug: string, href?: string) => {
  if (href) return href;
  const prefix = normalizedBaseHref || '';
  const path = `${prefix}/${slug}`.replace(/\/+/g, '/');
  return path.endsWith('/') ? path : `${path}/`;
};
---
<BaseLayout title={content.title} meta={meta}>
  
  <Fragment slot="header__actions">
    {backHref ? (
      <a class="button button--small button--dark" href={backHref}>
        {backLabel ?? '‚Üê Back'}
      </a>
    ) : null}
  </Fragment>

  <section class="content-section">
    <Card class="card--plain is-centered">
      
      <Fragment slot="head">
        <TitleWithIcon class="card__title" title={content.title} icon={icon} emoji={emoji} />
      </Fragment>

      <Fragment slot="body">
        {introParagraphs.map((paragraph) => (
          <p>{paragraph}</p>
        ))}
      </Fragment>

    </Card>
  </section>

  <section class="content-section cols-3">
    {categories.map(({ slug, title, description, href }) => (
      <a href={getHref(slug, href)} aria-label={`Open ${title}`}>
        <Card class="card--light is-animated is-centered" headClass="card__head--column">
          
          <Fragment slot="head">
            <h3 class="card__title">{title}</h3>
          </Fragment>

          <Fragment slot="body">
            {description ? <p>{description}</p> : null}
          </Fragment>
          
          <Fragment slot="foot">
            <div class="media-image placeholder" data-slug={slug}></div>
          </Fragment>        
        
        </Card>
      </a>
    ))}
  </section>
</BaseLayout>