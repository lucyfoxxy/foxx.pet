---
import Card from '@Templates/Card.astro';
import ICONS from '@Assets/Icons.astro';

interface AlbumViewData {
  title: string;
  description: string;
  shareKey?: string;
  albumSlug: string;
  categoryBadge?: string;
  dateBadge?: string;
  initialThumb?: {
    src?: string;
    width?: number;
    height?: number;
    alt?: string;
    full?: string;
  };
}

interface Props {
  album: AlbumViewData;
}

const { album } = Astro.props;
---

<section class="content-section">
  <Card class="card--ghost card--flush is-centered" headClass="card__head--column">
    {album.description ? (
      <Fragment slot="body">
        <div class="prose">
          <p>{album.description}</p>
        </div>
      </Fragment>
    ) : null}

    <Fragment slot="body">
      <div class="media-wrapper media-wrapper--controls">
        <div
          class="media-frame"
          data-slug={album.albumSlug}
          data-autoplay="true"
          data-interval="8000"
          data-random="true"
          data-share-key={album.shareKey}
          role="button"
          tabindex="0"
          aria-label="Open artwork in lightbox"
        >
          <img
            src={album.initialThumb?.src ?? ''}
            width={album.initialThumb?.width}
            height={album.initialThumb?.height}
            alt={album.initialThumb?.alt ?? ''}
            class="media-image"
            loading="eager"
            decoding="async"
            data-initial-full={album.initialThumb?.full ?? undefined}
          />
        </div>

        <div class="card__overlay card__overlay--controls card__overlay--bottom">
          <button class="media-prev" aria-label="Previous" type="button">❮</button>
          <button class="media-playpause" aria-label="Pause autoplay" type="button">
            <ICONS kind="pause" />
          </button>
          <button class="media-next" aria-label="Next" type="button">❯</button>
          <div class="media-progress" aria-hidden="true"></div>
        </div>

        <div class="card__overlay card__overlay--title card__overlay--top">
          <h1 class="card__title">{album.title}</h1>
          {(album.categoryBadge || album.dateBadge) && (
            <div class="card__badges controls controls--end">
              {album.categoryBadge ? <span class="badge badge--dark">{album.categoryBadge}</span> : null}
              {album.dateBadge ? <span class="badge badge--dark">{album.dateBadge}</span> : null}
            </div>
          )}
        </div>
      </div>
    </Fragment>
  </Card>
</section>

<section class="content-section">
  <Card class="card--flush card--ghost is-centered">
    <Fragment slot="body">
      <div class="media-wrapper media-wrapper--thumbs" role="list">
        <button class="media-prev is-thumbs-prev" aria-label="Previous thumbnails" type="button">❮</button>
        <div class="media-wrapper media-wrapper--frames" role="list" data-window="10"></div>
        <button class="media-next is-thumbs-next" aria-label="Next thumbnails" type="button">❯</button>
      </div>
    </Fragment>
  </Card>
</section>

<script>
  import initGalleryPage from '@Scripts/galleryViewer.js';
  import { runOnReady } from '@Scripts/utils/_runOnReady.js';

  runOnReady(initGalleryPage);
</script>
