---
import { getCollection, type CollectionEntry } from 'astro:content';
import { getPageContent } from '@Content/siteContent';

type StoryEntry = CollectionEntry<'stories'>;

const content = await getPageContent('stories');
const introParagraphs = content.introParagraphs ?? (content.description ? [content.description] : []);
const overview = content.overview ?? {};
const stories = (await getCollection('stories')).sort(
  (a, b) => b.data.publishDate.getTime() - a.data.publishDate.getTime(),
);

const categoryFacets = Array.from(
  new Set(stories.flatMap((story) => story.data.categories ?? [])),
).sort((a, b) => a.localeCompare(b));

const tagFacets = Array.from(new Set(stories.flatMap((story) => story.data.tags ?? []))).sort((a, b) =>
  a.localeCompare(b),
);

const formatDate = (date: Date) => new Intl.DateTimeFormat('en', { dateStyle: 'medium' }).format(date);
const hasStories = stories.length > 0;
---

<section class="content-section">
  <div class="card card--plain is-centered">
    <div class="card__head">
      <h1 class="card__title">{content.title}</h1>
    </div>
    <div class="card__body">
      <div class="prose">
        {introParagraphs.map((paragraph) => (
          <p>{paragraph}</p>
        ))}
      </div>
    </div>
  </div>
</section>

  {hasStories ? (
    <>
    <section class="content-section">
      <div class="card card--soft" aria-labelledby="stories-facets">
        <div class="card__head card__head--column">
          <h2 class="card__title" id="stories-facets">Browse the archive</h2>
        </div>
        <div class="card__body">
          <div class="prose">
            <p>
              Use these collections to wire up dynamic filters. Grouping by category or tag mirrors how the gallery page
              organises albums.
            </p>
          </div>
          <div class="prose">
            {categoryFacets.length > 0 && (
              <p>
                <strong>Categories:</strong>
                {' '}
                {categoryFacets.join(', ')}
              </p>
            )}
            {tagFacets.length > 0 && (
              <p>
                <strong>Tags:</strong>
                {' '}
                {tagFacets.join(', ')}
              </p>
            )}
            {categoryFacets.length === 0 && tagFacets.length === 0 && (
              <p>
                Add <code>categories</code> or <code>tags</code> frontmatter fields to expose richer filtering options.
              </p>
            )}
          </div>
        </div>
      </div>
    </section>

      <section class="content-section cols-2">
        {stories.map((story: StoryEntry) => {
          const excerpt = story.data.description ?? '';
          const categories = story.data.categories ?? [];
          const tags = story.data.tags ?? [];
          const hasBadges = categories.length > 0 || tags.length > 0;
          return (
            <article class="card">
              <div class="card__head card__head--column">
                <h2 class="card__title">
                  <a href={`/stories/${story.slug}/`}>{story.data.title}</a>
                </h2>
                {hasBadges && (
                  <div class="card__badges controls controls--tight">
                    {categories.map((category) => (
                      <span class="badge is-dark">{category}</span>
                    ))}
                    {tags.map((tag) => (
                      <span class="badge">{tag}</span>
                    ))}
                  </div>
                )}
              </div>
              <div class="card__body">
                <p>
                  <strong>Published:</strong> {formatDate(story.data.publishDate)}
                  {story.data.updatedDate && (
                    <>
                      <br />
                      <strong>Updated:</strong> {formatDate(story.data.updatedDate)}
                    </>
                  )}
                </p>
                <div class="prose">
                  {excerpt && <p>{excerpt}</p>}
                </div>
              </div>
              <div class="card__foot">
                <div class="controls controls--start">
                  <a class="button is-ghost" href={`/stories/${story.slug}/`}>
                    Read full story â†’
                  </a>
                </div>
              </div>
            </article>
          );
        })}
      </section>
    </>
  ) : (
    <section class="content-section">
      <div class="card card--plain is-centered">
        <div class="card__head">
          <h2 class="card__title">{overview.emptyState ?? 'Stories are still brewing'}</h2>
        </div>
        <div class="card__body">
          <div class="prose">
            <p>{overview.cta ?? 'Once tales launch, they will appear here automatically.'}</p>
          </div>
        </div>
      </div>
    </section>
  )}
