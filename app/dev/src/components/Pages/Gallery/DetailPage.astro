---

type GalleryItem = {
  full?: string | null;
  thumb?: string | null;
  alt?: string | null;
  width?: number;
  height?: number;
};

type Props = {
  albumSlug: string;
  title?: string;
  description?: string;
  category?: string | null;
  startDate?: string | null;
  shareKey?: string;
  initialItem?: GalleryItem | null;
};

const { albumSlug, title, category, startDate, shareKey, initialItem } = Astro.props as Props;
const detailTitle = title ?? 'Gallery';

const trimmedCategory = typeof category === 'string' ? category.trim() : '';
const normalizedCategory = trimmedCategory.length > 0 ? trimmedCategory : undefined;

const parsedStartDate = startDate ? Date.parse(startDate) : Number.NaN;
const hasValidStartDate = Number.isFinite(parsedStartDate);
const formattedStartDate = hasValidStartDate
  ? new Intl.DateTimeFormat('en', { month: 'long', year: 'numeric' }).format(
      new Date(parsedStartDate),
    )
  : undefined;

const normalizedInitialItem = initialItem && (initialItem.full || initialItem.thumb)
  ? {
      full: typeof initialItem.full === 'string' ? initialItem.full : undefined,
      thumb: typeof initialItem.thumb === 'string' ? initialItem.thumb : undefined,
      width: typeof initialItem.width === 'number' && Number.isFinite(initialItem.width)
        ? initialItem.width
        : undefined,
      height: typeof initialItem.height === 'number' && Number.isFinite(initialItem.height)
        ? initialItem.height
        : undefined,
    }
  : null;

const initialThumbSrc = normalizedInitialItem?.thumb;
const initialFullSrc = normalizedInitialItem?.full;
const initialWidth = normalizedInitialItem?.width;
const initialHeight = normalizedInitialItem?.height;
---
<section class="content-section">
  <div class="card card--plain is-centered">
    

  </div>
    
  
  
  <div
    class="media__hook card card--light is-centered"
    data-slug={albumSlug}
    data-autoplay="true"
    data-interval="8000"
    data-random="true"
    data-share-key={shareKey}
  >
    <h1>{detailTitle}</h1>
    <p>*description goes here*</p>
    <div class="card__badges controls">
        {normalizedCategory ? <p class="badge badge--large">{normalizedCategory}</p> : null}
        {formattedStartDate ? <p class="badge badge--large">{formattedStartDate}</p> : null}
    </div>
    <div class="media__wrapper">
      
      <div class="media__frame" role="button" tabindex="0" aria-label="Open artwork in lightbox">
        <img
          class="media__image"
          src={initialThumbSrc}
          data-initial-full={initialFullSrc}
          width={initialWidth}
          height={initialHeight}
          alt=""
          loading={initialThumbSrc ? 'eager' : undefined}
          decoding="async"
        />
        <button class="media__nav media__prev" aria-label="Previous" type="button">❮</button>
        <button class="media__nav media__next" aria-label="Next" type="button">❯</button>
        <button class="media__playpause" aria-label="Pause autoplay" type="button">⏸</button>
        <div class="media__progress" aria-hidden="true"></div>
      </div>
      <div class="media__thumbs" data-window="10">
        <button class="media__thumbs-nav media__thumbs-prev" aria-label="Previous thumbnails" type="button">❮</button>
        <div class="media__thumbs-wrap" role="list"></div>
        <button class="media__thumbs-nav media__thumbs-next" aria-label="Next thumbnails" type="button">❯</button>
      </div>
    </div>
  </div>
</section>
  <script>
    import initGalleryPage from '@Scripts/galleryViewer.js';
    import { runOnReady } from '@Scripts/utils/_runOnReady.js';

    runOnReady(initGalleryPage);
  </script>
