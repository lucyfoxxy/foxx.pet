---
import Card from '@Templates/Card.astro';
type GalleryItem = {
  full?: string | null;
  thumb?: string | null;
  alt?: string | null;
  width?: number;
  height?: number;
};

type Props = {
  albumSlug: string;
  title?: string;
  description?: string;
  category?: string | null;
  startDate?: string | null;
  shareKey?: string;
  initialItem?: GalleryItem | null;
};

const { albumSlug, title, description, category, startDate, shareKey, initialItem } = Astro.props as Props;
const detailTitle = title ?? 'Gallery';

const trimmedCategory = typeof category === 'string' ? category.trim() : '';
const normalizedCategory = trimmedCategory.length > 0 ? trimmedCategory : undefined;

const parsedStartDate = startDate ? Date.parse(startDate) : Number.NaN;
const hasValidStartDate = Number.isFinite(parsedStartDate);
const formattedStartDate = hasValidStartDate
  ? new Intl.DateTimeFormat('en', { month: 'long', year: 'numeric' }).format(
      new Date(parsedStartDate),
    )
  : undefined;

const normalizedInitialItem = initialItem && (initialItem.full || initialItem.thumb)
  ? {
      full: typeof initialItem.full === 'string' ? initialItem.full : undefined,
      thumb: typeof initialItem.thumb === 'string' ? initialItem.thumb : undefined,
      width: typeof initialItem.width === 'number' && Number.isFinite(initialItem.width)
        ? initialItem.width
        : undefined,
      height: typeof initialItem.height === 'number' && Number.isFinite(initialItem.height)
        ? initialItem.height
        : undefined,
      alt: typeof initialItem.alt === 'string' ? initialItem.alt : undefined,
    }
  : null;

const initialThumbSrc = normalizedInitialItem?.thumb;
const initialFullSrc = normalizedInitialItem?.full;
const initialWidth = normalizedInitialItem?.width;
const initialHeight = normalizedInitialItem?.height;
---
<section class="content-section">
  <Card class="card--plain is-centered" headClass="card__head--column">
    <Fragment slot="head">
      <h1 class="card__title">{detailTitle}</h1>
      {(normalizedCategory || formattedStartDate) && (
        <div class="card__badges controls controls--tight">
          {normalizedCategory ? <span class="badge">{normalizedCategory}</span> : null}
          {formattedStartDate ? <span class="badge">{formattedStartDate}</span> : null}
        </div>
      )}
    </Fragment>
    <Fragment slot="body">
      {description ? (
        <div class="prose">
          <p>{description}</p>
        </div>
      ) : null}
      <div class="media-wrapper">
        
        <div
          class="media-frame"
          data-slug={albumSlug}
          data-autoplay="true"
          data-interval="8000"
          data-random="true"
          data-share-key={shareKey}
          role="button" 
          tabindex="0" 
          aria-label="Open artwork in lightbox"
        >
        
          <img
            src={initialThumbSrc ?? initialFullSrc ?? ''}
            width={initialWidth}
            height={initialHeight}
            alt={normalizedInitialItem?.alt ?? ''}
            class="media-image"
            loading="eager"
            decoding="async"
            data-initial-full={initialFullSrc ?? undefined}
          />
        
          <button class="media-prev" aria-label="Previous" type="button">❮</button>
          <button class="media-next" aria-label="Next" type="button">❯</button>
          <button class="media-playpause" aria-label="Pause autoplay" type="button">⏸</button>
          <div class="media-progress" aria-hidden="true"></div>
        </div>
      </div>
    </Fragment>
  </Card>
  <Card class="card--ghost">
    <Fragment slot="body">
      <div class="media-wrapper is-thumbs-wrap" role="list">
          <button class="media-prev is-thumbs-prev" aria-label="Previous thumbnails" type="button">❮</button>
          <div class="media-frame is-thumbs-frame" data-window="10"></div>
          <button class="media-next is-thumbs-next" aria-label="Next thumbnails" type="button">❯</button>
      </div>
    </Fragment>
  </Card>
</section>
  <script>
    import initGalleryPage from '@Scripts/galleryViewer.js';
    import { runOnReady } from '@Scripts/utils/_runOnReady.js';

    runOnReady(initGalleryPage);
  </script>
