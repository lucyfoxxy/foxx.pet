---
import ContentView from '@Templates/ContentView.astro';
import SubcategoryOverview from '@Templates/SubcategoryOverview.astro';
import { getPageContent } from '@Content/siteContent';
import { getCollection } from 'astro:content';

export const prerender = true;

type StaticProps = {
  albumSlug?: string;
  backToParentCategory?: boolean;
};

export async function getStaticPaths() {
  const page = await getPageContent('frames');
  const categories = page.categories ?? [];
  const frameAlbums = await getCollection('album', ({ id }) => id.startsWith('frames/'));

  const paths = categories
    .map((category) => {
      const slug = category.slug?.trim();
      if (!slug) {
        return undefined;
      }

      const matchingAlbums = frameAlbums.filter(
        ({ data }) => (data.category?.slug ?? '').trim() === slug,
      );

      const albumSlug =
        matchingAlbums.length === 1 && matchingAlbums[0].data.slug
          ? matchingAlbums[0].data.slug.trim()
          : undefined;

      const props: StaticProps = albumSlug
        ? { albumSlug, backToParentCategory: true }
        : {};

      return {
        params: { slug },
        props,
      };
    })
    .filter((entry): entry is { params: { slug: string }; props: StaticProps } => Boolean(entry));

  return paths;
}

const { slug } = Astro.params;

if (!slug) {
  throw new Error('Missing frames category slug');
}

const { albumSlug, backToParentCategory = false } = Astro.props as StaticProps;
---
{albumSlug ? (
  <ContentView slug={albumSlug} backToParentCategory={backToParentCategory} />
) : (
  <SubcategoryOverview slug={slug} />
)}
